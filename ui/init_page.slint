import { ComboBox, Button } from "std-widgets.slint";

export struct socket_info {
    name: [string],
    index: [int]
}
export component initPage inherits Rectangle {
    min-height: 400px;
    min-width: 600px;
    preferred-height: 600px;
    preferred-width: 800px;
    background: #1a1f2b;
    in property <socket_info> can_sockets;
    in property <string> out: "Please select CAN device to start";
    callback start(string /* name */, int /* index */, string /* */);
    VerticalLayout {
        Rectangle {}
        Text {
            text: "Welcome to CAN-VIEWER";
            font-size: 20px;
            vertical-alignment: center;
            horizontal-alignment: center;
            color: white;
        }
        Rectangle {}
        HorizontalLayout {
            Rectangle {}
            VerticalLayout {
                socket_can_box := ComboBox {
                    model: can_sockets.name;
                    current-value: can_sockets.name[0];
                }
            }
            bitrate_box := ComboBox {
                model: ["1 Mbit/s", "800 kbit/s", "500 kbit/s", "250 kbit/s", "125 kbit/s",
                        "100 kbit/s", "95.238 kbit/s", "83.333 kbit/s", "50 kbit/s", "47.619 kbit/s",
                        "33.333 kbit/s", "20 kbit/s", "10 kbit/s", "5 kbit/s"];
                current-value: "250 kbit/s";
            }
            Button {
                text: "start";
                clicked => {
                    start(socket_can_box.current-value, socket_can_box.current-index, bitrate_box.current-value);
                }
            }
            Rectangle {}
        }
        Rectangle {}
        HorizontalLayout {
            Rectangle {
                width: 10px;
            }
            Rectangle {
                min-height: 150px;
                border-color: white;
                border-width: 2px;
                border-radius: 5px;
                Text {
                    text: out;
                    color: white;
                    vertical-alignment: center;
                    horizontal-alignment: center;
                }
            }
            Rectangle {
                width: 10px;
            }
        }
        Rectangle {}
    }
}